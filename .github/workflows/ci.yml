name: Code Quality & Testing Pipeline

# When should this workflow run?
on:
    # Run on pushes to main branch (when you merge code)
    push:
        branches: [main]
    # Run on pull requests to main (when someone wants to merge code)
    pull_request:
        branches: [main]

# Environment variables for all jobs
env:
    NODE_ENV: test

jobs:
    # Job 1: Setup dependencies (foundation for other jobs)
    setup:
        name: Setup Dependencies
        runs-on: ubuntu-latest
        outputs:
            cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
            store-path: ${{ steps.get-pnpm-store.outputs.store-path }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Get pnpm store directory
              id: get-pnpm-store
              shell: bash
              run: |
                  echo "store-path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ steps.get-pnpm-store.outputs.store-path }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Cache node_modules
              id: cache-deps
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: pnpm install --frozen-lockfile

    # Job 2: TypeScript compilation check
    typescript:
        name: TypeScript Compilation
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies (if cache miss)
              run: pnpm install --frozen-lockfile

            # Check that your TypeScript code compiles without errors
            - name: TypeScript type checking
              run: pnpm run type-check

            # This tells you if your code would successfully build for production
            - name: Test production build
              run: pnpm run build

    # Job 3: Code style and quality
    linting:
        name: Code Style & Quality
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies (if cache miss)
              run: pnpm install --frozen-lockfile

            # Check that your code follows consistent style rules
            - name: ESLint code quality check
              run: pnpm run lint

            # Check that your code is properly formatted
            - name: Prettier formatting check
              run: pnpm run format:check

    # Job 4: Unit tests for utility functions
    unit-tests:
        name: Unit Tests (Utils & Validators)
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies (if cache miss)
              run: pnpm install --frozen-lockfile

            # Run your utility function tests (password, JWT, validators)
            - name: Run unit tests
              run: pnpm run test:run --reporter=verbose src/utils src/validators src/errors
              env:
                  JWT_ACCESS_SECRET: test-access-secret-key-for-ci-testing
                  JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-testing
                  ACCESS_TOKEN_EXPIRY: 15m
                  REFRESH_TOKEN_EXPIRY: 7d

    # Job 5: Service tests (more complex business logic)
    service-tests:
        name: Service & Business Logic Tests
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies (if cache miss)
              run: pnpm install --frozen-lockfile

            # Run tests for your services (UserService, etc.)
            - name: Run service tests
              run: pnpm run test:run --reporter=verbose src/services
              env:
                  JWT_ACCESS_SECRET: test-access-secret-key-for-ci-testing
                  JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-testing
                  DATABASE_URL: postgresql://test:test@localhost:5432/testdb

    # Job 6: Integration tests with database
    integration-tests:
        name: Integration Tests (Database Required)
        runs-on: ubuntu-latest
        needs: setup

        # Set up PostgreSQL service for integration tests
        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_PASSWORD: test
                    POSTGRES_USER: test
                    POSTGRES_DB: testdb
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies (if cache miss)
              run: pnpm install --frozen-lockfile

            # Setup test database schema
            - name: Setup test database
              run: |
                  pnpm prisma generate
                  pnpm prisma db push --force-reset
              env:
                  DATABASE_URL: postgresql://test:test@localhost:5432/testdb

            # Run integration tests that actually use the database
            - name: Run integration tests
              run: |
                  echo "Running integration tests..."
                  # Add integration tests here when you create them
                  echo "Integration test setup complete"
              env:
                  DATABASE_URL: postgresql://test:test@localhost:5432/testdb
                  JWT_ACCESS_SECRET: test-access-secret-key-for-ci-testing
                  JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-testing

    # Job 7: Test coverage reporting
    coverage:
        name: Test Coverage Report
        runs-on: ubuntu-latest
        needs: [unit-tests, service-tests]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js from .nvmrc
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.16.1

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install dependencies (if cache miss)
              run: pnpm install --frozen-lockfile

            # Generate comprehensive coverage report
            - name: Generate coverage report
              run: pnpm run coverage
              env:
                  JWT_ACCESS_SECRET: test-access-secret-key-for-ci-testing
                  JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-testing

            # Upload coverage report as artifact (you can download and view it)
            - name: Upload coverage reports
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: coverage/
                  retention-days: 30

    # Job 8: Final quality gate
    quality-gate:
        name: Quality Gate
        runs-on: ubuntu-latest
        needs: [typescript, linting, unit-tests, service-tests, integration-tests, coverage]

        steps:
            - name: All checks passed
              run: |
                  echo "🎉 All quality checks passed!"
                  echo "✅ TypeScript compilation successful"
                  echo "✅ Code style and linting passed"  
                  echo "✅ Unit tests passed"
                  echo "✅ Service tests passed"
                  echo "✅ Integration tests completed"
                  echo "✅ Coverage report generated"
                  echo ""
                  echo "🚀 Code is ready for deployment!"
